#coding:utf-8
import time
from tkinter import *
from datetime import date
from datetime import datetime
import calendar

def fuye1():
    fuye1=Toplevel()
    fuye1.title("当前日期日历显示及其他功能")
    year=int(time.strftime('%Y',time.localtime(time.time())))
    v0=now_time()
    v1 ="日  一 二 三  四 五 六\n" \
        "   01 02 03 04 05 06\n" \
        "07 08 09 10 11 12 13\n" \
        "14 15 16 17 18 19 20\n" \
        "21 22 23 24 25 26 27\n" \
        "28 29 30"
    v2=leap_year(year)
    v3=tiangan(year)
    v4=dizhi(year)
    show0 = Label(fuye1, text=v0, bg="dark red", fg="yellow", font=("times", 14, "bold"))
    show1=Text(fuye1,width=24,height=15)
    show1.insert(100.0,v1)
    show2=Label(fuye1,text=v2,bg="dark red",fg="yellow",font=("times",10,"bold"))
    show3=Label(fuye1,text=v3+v4+"年",bg="dark red", fg="yellow", font=("times", 10, "bold"))
    show4 = Button(fuye1, text="显示农历日历", font=("times", 12, "bold"), bg="Linen", command=fuye1_1)
    show1.grid(row=2,column=0)
    fuye1.grid_rowconfigure(3, minsize=8)
    show2.grid(row=4,column=0)
    fuye1.grid_rowconfigure(5, minsize=8)
    show3.grid(row=6, column=0)
    fuye1.grid_rowconfigure(7, minsize=8)
    show4.grid(row=8, column=0)

def fuye1_1():
    fuye1_1=Toplevel()
    fuye1_1.title("当前日历农历显示")

def fuye2():
    fuye2=Toplevel()
    fuye2.title("指定日期日历显示及其他功能")
    year = int(do3_1.get())
    month = int(do3_2.get())
    day = int(do3_3.get())
    v1=" 日 一 二 三 四 五 六\n"\
       "                  01\n"\
       "02 03 04 05 06 07 08\n"\
       "09 10 11 12 13 14 15\n"\
       "16 17 18 19 20 21 22\n"\
       "23 24 25 26 27 28"
    v2=leap_year(year)
    v3 = tiangan(year)
    v4 = dizhi(year)
    show1=Text(fuye2,width=21,height=10)
    show1.insert(100.0,v1)
    show2=Label(fuye2,text=v2,bg="dark red",fg="yellow",font=("times",10,"bold"))
    show3 = Label(fuye2, text=v3 + v4 + "年", bg="dark red", fg="yellow", font=("times", 10, "bold"))
    show4 = Button(fuye2, text="显示农历日历", font=("times", 12, "bold"), bg="Linen", command=fuye2_2)
    show1.grid(row=2,column=0)
    fuye2.grid_rowconfigure(3, minsize=8)
    show2.grid(row=4,column=0)
    fuye2.grid_rowconfigure(5, minsize=8)
    show3.grid(row=6, column=0)
    fuye2.grid_rowconfigure(7, minsize=8)
    show4.grid(row=8, column=0)

def fuye2_2():
    fuye2_2=Toplevel()
    fuye2_2.title("指定日历农历显示")

def fuye3():
    fuye3=Toplevel()
    fuye3.title("生肖查询")
    v1 = int(do5_1.get())
    v2=shengxiao(v1)
    show1=Label(fuye3,text=v2,bg="dark red",fg="yellow",font=("times",14,"bold"))
    show1.grid(row=1,column=0)
    show2=Label(fuye3,text="生肖来历简介",bg="PaleGoldenrod",font=("times",12,"bold"))
    show_a = Button(fuye3, text="子鼠", font=("times", 10, "bold"), bg="Linen", command=shu)
    show_b = Button(fuye3, text="丑牛", font=("times", 10, "bold"), bg="Linen", command=niu)
    show_c = Button(fuye3, text="寅虎", font=("times", 10, "bold"), bg="Linen", command=hu)
    show_d = Button(fuye3, text="卯兔", font=("times", 10, "bold"), bg="Linen", command=tu)
    show_e = Button(fuye3, text="辰龙", font=("times", 10, "bold"), bg="Linen", command=long)
    show_f = Button(fuye3, text="巳蛇", font=("times", 10, "bold"), bg="Linen", command=she)
    show_g = Button(fuye3, text="午马", font=("times", 10, "bold"), bg="Linen", command=ma)
    show_h = Button(fuye3, text="未羊", font=("times", 10, "bold"), bg="Linen", command=yang)
    show_i = Button(fuye3, text="申猴", font=("times", 10, "bold"), bg="Linen", command=hou)
    show_j = Button(fuye3, text="酉鸡", font=("times", 10, "bold"), bg="Linen", command=ji)
    show_k = Button(fuye3, text="戌狗", font=("times", 10, "bold"), bg="Linen", command=gou)
    show_l = Button(fuye3, text="亥猪", font=("times", 10, "bold"), bg="Linen", command=zhu)
    show2.grid(row=2,column=0)
    show_a.grid(row=2,column=1)
    show_b.grid(row=2, column=2)
    show_c.grid(row=2, column=3)
    show_d.grid(row=2, column=4)
    show_e.grid(row=3, column=1)
    show_f.grid(row=3, column=2)
    show_g.grid(row=3, column=3)
    show_h.grid(row=3, column=4)
    show_i.grid(row=4, column=1)
    show_j.grid(row=4, column=2)
    show_k.grid(row=4, column=3)
    show_l.grid(row=4, column=4)


def shu():
    shu = Toplevel()
    shu.title("生肖查询")
    shu=Text(shu,width=40,height=20)
    shu_="子鼠的来历:老鼠喜欢在夜深人静的时候出没，特别喜欢在子夜时分出来活动，故而称为“子鼠”。"
    shu.insert(1.0,shu_)
    shu.grid(row=1,column=0)

def niu():
    niu = Toplevel()
    niu.title("生肖查询")
    niu=Text(niu,width=40,height=20)
    niu_="丑牛的来历:在古代牛是用来耕田，做苦力活的，所以每到丑时，农家就会起床来喂饱自家的牛，让牛更好的工作，故而称为“丑牛”。"
    niu.insert(1.0,niu_)
    niu.grid(row=1,column=0)

def hu():
    hu = Toplevel()
    hu.title("生肖查询")
    hu=Text(hu,width=40,height=20)
    hu_="寅虎的来历:虎是百善之王，生性凶狠，最喜欢在昼夜之间穿梭横行，故而称之为“寅虎”。"
    hu.insert(1.0,hu_)
    hu.grid(row=1,column=0)

def tu():
    tu = Toplevel()
    tu.title("生肖查询")
    tu=Text(tu,width=40,height=20)
    tu_="卯兔的来历:卯时是天刚刚亮的时候，这个时候兔子最喜欢外出吃草，故而称之为“卯兔”。"
    tu.insert(1.0,tu_)
    tu.grid(row=1,column=0)

def long():
    long = Toplevel()
    long.title("生肖查询")
    long=Text(long,width=40,height=20)
    long_="辰龙的来历:辰时正是起雾的时候，相传龙最喜欢在雾中飞腾，故而称之为“辰龙”。"
    long.insert(1.0,long_)
    long.grid(row=1,column=0)

def she():
    she = Toplevel()
    she.title("生肖查询")
    she=Text(she,width=40,height=20)
    she_="巳蛇的来历:巳时是天阳当空高照的时候，这个时候蛇最喜欢出来走动，故而称之为“巳蛇”。"
    she.insert(1.0,she_)
    she.grid(row=1,column=0)

def ma():
    ma = Toplevel()
    ma.title("生肖查询")
    ma=Text(ma,width=40,height=20)
    ma_="午马的来历:午时是太阳最烈，烈日当空的时候，而我们马的个性最烈，故而称之为“午马”."
    ma.insert(1.0,ma_)
    ma.grid(row=1,column=0)

def yang():
    yang = Toplevel()
    yang.title("生肖查询")
    yang=Text(yang,width=40,height=20)
    yang_="未羊的来历:未时是太阳渐渐西沉，正是放羊的最佳时机，故而称之为“未羊”。"
    yang.insert(1.0,yang_)
    yang.grid(row=1,column=0)

def hou():
    hou = Toplevel()
    hou.title("生肖查询")
    hou=Text(hou,width=40,height=20)
    hou_="申猴的来历:申时太阳已经西下，这个时候正是猴子出没玩耍的时候，故而称之为“申猴“。"
    hou.insert(1.0,hou_)
    hou.grid(row=1,column=0)

def ji():
    ji = Toplevel()
    ji.title("生肖查询")
    ji=Text(ji,width=40,height=20)
    ji_="酉鸡的来历:西时显太阳已经下山，天黑的时候，这个时候所有的鸡都要回鸡窝里去，故而称之为“酉鸡”。"
    ji.insert(1.0,ji_)
    ji.grid(row=1,column=0)

def gou():
    gou = Toplevel()
    gou.title("生肖查询")
    gou=Text(gou,width=40,height=20)
    gou_="戌狗：戌时是夜深人静的时候，此时正是犬类睡前的最后巡视时间，故而称之为“戌狗”。"
    gou.insert(1.0,gou_)
    gou.grid(row=1,column=0)


def zhu():
    zhu = Toplevel()
    zhu.title("生肖查询")
    zhu=Text(zhu,width=40,height=20)
    zhu_="亥猪：亥时的时候，猪睡得正香，故而称之为“亥猪”。"
    zhu.insert(1.0,zhu_)
    zhu.grid(row=1,column=0)


def fuye5():
    v1 = int(do11_1.get())
    v2 = int(do11_2.get())
    v3 = int(do11_3.get())
    v4=countdown(v1,v2,v3)
    v1_1 = str(do11_1.get())
    v2_1 = str(do11_2.get())
    v3_1 = str(do11_3.get())
    v4_1=str(v4)
    fuye5=Toplevel()
    fuye5.title("天数计算")
    consult=Label(fuye5,text="今天距离"+v1_1+"年"+v2_1+"月"+v3_1+"日还有"+v4_1+"天",bg="dark red",fg="yellow",font=("times",14,"bold"))
    consult.grid(row=1,column=1)

def fuye4():
    v1=do8_1.get()
    v2=do8_2.get()
    v3=do8_3.get()
    consult=panduanxingzuo()
    fuye4=Toplevel()
    fuye4.title("星座查询")
    xingzuo1=Label(fuye4,text=v1+"年"+v2+"月"+v3+"日的对应星座是"+consult,bg="dark red",fg="yellow",font=("times",14,"bold"))
    show2 = Label(fuye4, text="星座具体时间段及性格展示", bg="PaleGoldenrod", font=("times", 12, "bold"))
    show_a = Button(fuye4, text="水瓶座", font=("times", 10, "bold"), bg="Linen", command=shuiping)
    show_b = Button(fuye4, text="双鱼座", font=("times", 10, "bold"), bg="Linen", command=shuangyu)
    show_c = Button(fuye4, text="白羊座", font=("times", 10, "bold"), bg="Linen", command=baiyang)
    show_d = Button(fuye4, text="金牛座", font=("times", 10, "bold"), bg="Linen", command=jinniu)
    show_e = Button(fuye4, text="双子座", font=("times", 10, "bold"), bg="Linen", command=shuangzi)
    show_f = Button(fuye4, text="巨蟹座", font=("times", 10, "bold"), bg="Linen", command=juxie)
    show_g = Button(fuye4, text="狮子座", font=("times", 10, "bold"), bg="Linen", command=shizi)
    show_h = Button(fuye4, text="处女座", font=("times", 10, "bold"), bg="Linen", command=chunv)
    show_i = Button(fuye4, text="天秤座", font=("times", 10, "bold"), bg="Linen", command=tiancheng)
    show_j = Button(fuye4, text="天蝎座", font=("times", 10, "bold"), bg="Linen", command=tianxie)
    show_k = Button(fuye4, text="射手座", font=("times", 10, "bold"), bg="Linen", command=sheshou)
    show_l = Button(fuye4, text="摩羯座", font=("times", 10, "bold"), bg="Linen", command=mojie)
    xingzuo1.grid(row=1,column=0)
    fuye4.grid_rowconfigure(2, minsize=8)
    show2.grid(row=3, column=0)
    show_a.grid(row=3, column=1)
    show_b.grid(row=3, column=2)
    show_c.grid(row=3, column=3)
    show_d.grid(row=3, column=4)
    show_e.grid(row=4, column=1)
    show_f.grid(row=4, column=2)
    show_g.grid(row=4, column=3)
    show_h.grid(row=4, column=4)
    show_i.grid(row=5, column=1)
    show_j.grid(row=5, column=2)
    show_k.grid(row=5, column=3)
    show_l.grid(row=5, column=4)
    shuangzi_gif = PhotoImage(file='双子.gif')
    show_shuangzi=Label(fuye4,image=shuangzi_gif)
    show_shuangzi.pack()

def shuiping():
    shuiping = Toplevel()
    shuiping.title("生肖查询")
    shuiping=Text(shuiping,width=40,height=20)
    shuiping_="水瓶座：（1月20日—2月28日）外星人，天马行空，思想特立独行，在外人看来有个性，思维活跃。"
    shuiping.insert(1.0,shuiping_)
    shuiping.grid(row=1,column=0)

def shuangyu():
    shuangyu = Toplevel()
    shuangyu.title("生肖查询")
    shuangyu=Text(shuangyu,width=40,height=20)
    shuangyu_="双鱼座：（2月19日—3月20日）爱情至上，爱做梦，爱幻想，活在自己想象的世界里的人。"
    shuangyu.insert(1.0,shuangyu_)
    shuangyu.grid(row=1,column=0)

def baiyang():
    baiyang = Toplevel()
    baiyang.title("生肖查询")
    baiyang=Text(baiyang,width=40,height=20)
    baiyang_="白羊座：（3月21日—4月20日）直爽，热情，正直，无心机，冲动派。"
    baiyang.insert(1.0,baiyang_)
    baiyang.grid(row=1,column=0)

def jinniu():
    jinniu = Toplevel()
    jinniu.title("生肖查询")
    jinniu=Text(jinniu,width=40,height=20)
    jinniu_="金牛座：（4月21日—5月20日）闷骚，比较现实，有责任感，做事有持续力。"
    jinniu.insert(1.0,jinniu_)
    jinniu.grid(row=1,column=0)

def shuangzi():
    shuangzi = Toplevel()
    shuangzi.title("生肖查询")
    shuangzi=Text(shuangzi,width=40,height=20)
    shuangzi_="双子座：（5月21日—6月21日）双重性格，天真，可爱，但是有时候变化太大让人接受不了。"
    shuangzi.insert(1.0,shuangzi_)
    shuangzi.grid(row=1,column=0)

def juxie():
    juxie = Toplevel()
    juxie.title("生肖查询")
    juxie=Text(juxie,width=40,height=20)
    juxie_="巨蟹座：（6月22日—7月22日）恋家，情感细腻，多愁善感，易受伤，因为敏感所以情绪起伏大。"
    juxie.insert(1.0,juxie_)
    juxie.grid(row=1,column=0)

def shizi():
    shizi = Toplevel()
    shizi.title("生肖查询")
    shizi=Text(shizi,width=40,height=20)
    shizi_="狮子座：（7月23日—8月22日）霸气，认为自己是王者，火相星座，喜欢出风头。"
    shizi.insert(1.0,shizi_)
    shizi.grid(row=1,column=0)

def chunv():
    chunv = Toplevel()
    chunv.title("生肖查询")
    chunv=Text(chunv,width=40,height=20)
    chunv_="处女座：（8月23日—9月22日）完美主义者，有责任心。"
    chunv.insert(1.0,chunv_)
    chunv.grid(row=1,column=0)

def tiancheng():
    tiancheng = Toplevel()
    tiancheng.title("生肖查询")
    tiancheng=Text(tiancheng,width=40,height=20)
    tiancheng_="天秤座：（9月23日—10月22日）优雅，喜欢一切平衡的事物，但做事情优柔寡断，欠缺决断力。"
    tiancheng.insert(1.0,tiancheng_)
    tiancheng.grid(row=1,column=0)

def tianxie():
    tianxie = Toplevel()
    tianxie.title("生肖查询")
    tianxie=Text(tianxie,width=40,height=20)
    tianxie_="天蝎座：（10月23日—11月21日）神秘，聪明，占有欲强，个性比较极端。"
    tianxie.insert(1.0,tianxie_)
    tianxie.grid(row=1,column=0)

def sheshou():
    sheshou = Toplevel()
    sheshou.title("生肖查询")
    sheshou=Text(sheshou,width=40,height=20)
    sheshou_="射手座：（11月22日—12月21日）喜爱自由，不受约束，贪玩。"
    sheshou.insert(1.0,sheshou_)
    sheshou.grid(row=1,column=0)


def mojie():
    mojie = Toplevel()
    mojie.title("生肖查询")
    mojie=Text(mojie,width=40,height=20)
    mojie_="摩羯座：（12月22日—1月19日）成熟，稳重，闷骚，向往平稳的生活。"
    mojie.insert(1.0,mojie_)
    mojie.grid(row=1,column=0)



def shengxiao(year):
	    return u'猴鸡狗猪鼠牛虎兔龙蛇马羊'[year%12]

def leap_year(year):
    if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
        return ("当前年份是闰年")
    else:
        return ("当前年份不是闰年")


def now_time():
    return("当前时间： ", time.strftime('%Y.%m.%d  %H:%M:%S ', time.localtime(time.time())))

def countdown(year,month,day):
    d=date(year,month,day)-date.today()
    return d.days

def tiangan(year):
    return u'庚辛壬癸甲乙丙丁戊己'[year % 10]

def dizhi(year):
    return u'申酉戌亥子丑寅卯辰巳午未'[year % 12]


def panduanxingzuo():
    year = int(do8_1.get())
    month = int(do8_2.get())
    data = int(do8_3.get())
    if month == 1 and data >= 20 or month == 2 and data <= 18:
        return("水瓶座")
    if month == 1 and data > 31:
        return("(您输入的日期有误，请重新输入)")
    elif month == 2 and data >= 19 or month == 3 and data <= 20:
        return("双鱼座")
    if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
        if month == 2 and data > 29:
            return("(您输入的日期有误，请重新输入)")
    else:
        if month == 2 and data > 28:
            return("(您输入的日期有误，请重新输入)")
        elif month == 3 and data >= 21 or month == 4 and data <= 19:
            return("白羊座")
    if month == 3 and data > 31:
        return("(您输入的日期有误，请重新输入)")
    elif month == 4 and data >= 20 or month == 5 and data <= 20:
        return("金牛座")
    if month == 4 and data > 30:
        return("(您输入的日期有误，请重新输入)")
    elif month == 5 and data >= 21 or month == 6 and data <= 21:
        return("双子座")
    if month == 5 and data > 31:
        return("(您输入的日期有误，请重新输入)")
    elif month == 6 and data >= 22 or month == 7 and data <= 22:
        return("巨蟹座")
    if month == 6 and data > 30:
        return("(您输入的日期有误，请重新输入)")
    elif month == 7 and data >= 23 or month == 8 and data <= 22:
        return("狮子座")
    if month == 7 and data > 31:
        return("(您输入的日期有误，请重新输入)")
    elif month == 8 and data >= 23 or month == 9 and data <= 22:
        return("处女座")
    if month == 8 and data > 31:
        return("(您输入的日期有误，请重新输入)")
    elif month == 9 and data >= 23 or month == 10 and data <= 22:
        return("天秤座")
    if month == 9 and data > 30:
        return("(您输入的日期有误，请重新输入)")
    elif month == 10 and data >= 23 or month == 11 and data <= 21:
        return("天蝎座")
    if month == 10 and data > 31:
        return("(您输入的日期有误，请重新输入)")
    elif month == 11 and data >= 22 or month == 12 and data <= 21:
        return("射手座")
    if month == 11 and data > 30:
        return("(您输入的日期有误，请重新输入)")
    elif month == 12 and data >= 22 or month == 1 and data <= 19:
        return("摩羯座")
    if month == 12 and data > 31:
        return("(您输入的日期有误，请重新输入)")
    else:
        if year < 1000:
            return("(请输入不小于1000的年份)")
        else:
            return("")



win=Tk()

win.title("万年历")
head=Label(win,text="万年历",bg="dark red",fg="yellow",font=("times",16,"bold"))
do1=Label(win,text="日历显示",bg="dark red",fg="yellow",font=("times",14,"bold"))
do2=Button(win, text="当前日期",font = ("times", 12, "bold"), bg = "Linen",command=fuye1)
do3=Button(win, text="指定日期",font = ("times", 12, "bold"), bg = "Linen",command=fuye2)
do3_1=Entry(win,width=10,font=("times",12))
do3_2=Entry(win,width=10,font=("times",12))
do3_3=Entry(win,width=10,font=("times",12))
do2_2=Label(win,text="(请分别输入年、月、日）",bg="PaleGoldenrod",font=("times",8,"bold"))
do4=Label(win,text="生肖查询",bg="dark red",fg="yellow",font=("times",14,"bold"))
do5_1=Entry(win,width=10,font=("times",12))
do5_2=Entry(win,width=10,font=("times",12))
do5_3=Entry(win,width=10,font=("times",12))
do6=Button(win, text="查询",font = ("times", 12, "bold"), bg = "Linen",command=fuye3)
do4_2=Label(win,text="(请分别输入年、月、日）",bg="PaleGoldenrod",font=("times",8,"bold"))
do7=Label(win,text="星座查询",bg="dark red",fg="yellow",font=("times",14,"bold",))
do8_1=Entry(win,width=10,font=("times",12))
do8_2=Entry(win,width=10,font=("times",12))
do8_3=Entry(win,width=10,font=("times",12))
do7_2=Label(win,text="(请分别输入年、月、日）",bg="PaleGoldenrod",font=("times",8,"bold"))
do9=Button(win, text="查询",font = ("times", 12, "bold"), bg = "Linen",command=fuye4)
do10=Label(win,text="天数计算",bg="dark red",fg="yellow",font=("times",14,"bold"))
do11_1=Entry(win,width=10,font=("times",12))
do11_2=Entry(win,width=10,font=("times",12))
do11_3=Entry(win,width=10,font=("times",12))
do12=Button(win, text="查询",font = ("times", 12, "bold"), bg = "Linen",command=fuye5)
do10_2=Label(win,text="（计算从今天到未来某一天）",bg="PaleGoldenrod",font=("times",8,"bold"))


head.grid(row=1,column=3,padx=20)
win.grid_rowconfigure(2,minsize=10)
do1.grid(row=3,column=1)
do2.grid(row=3,column=7)
do3.grid(row=3,column=5)
do3_1.grid(row=3,column=2)
do3_2.grid(row=3,column=3)
do3_3.grid(row=3,column=4)
do2_2.grid(row=4,column=5)
do4.grid(row=5,column=1)
do5_1.grid(row=5,column=2)
do5_2.grid(row=5,column=3)
do5_3.grid(row=5,column=4)
do6.grid(row=5,column=5)
do4_2.grid(row=6,column=5)
do7.grid(row=7,column=1)
do8_1.grid(row=7,column=2)
do8_2.grid(row=7,column=3)
do8_3.grid(row=7,column=4)
do9.grid(row=7,column=5)
do7_2.grid(row=8,column=5)
do10.grid(row=9,column=1)
do11_1.grid(row=9,column=2)
do11_2.grid(row=9,column=3)
do11_3.grid(row=9,column=4)
do12.grid(row=9,column=5)
do10_2.grid(row=10,column=5)


win.mainloop()

